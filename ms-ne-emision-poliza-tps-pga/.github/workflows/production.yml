on:
  workflow_dispatch:
name: Production
jobs:
  validation:
    runs-on: ubuntu-latest
    outputs:
      teams: ${{ steps.actorTeams.outputs.teams }}
    steps:
      - name: Get Teams from the Actor
        uses: tspascoal/get-user-teams-membership@v2
        id: actorTeams
        with:
          username: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GH_PAT_READ_ORG }}

  production:
    uses: "pacifico-seguros-org/gradle-deploy-aks-prod/.github/workflows/main.yml@latest"
    if: startsWith(github.ref, 'refs/tags/') && (contains(needs.validation.outputs.teams, 'Grp_Chapter_DevOps_Users') || contains(needs.validation.outputs.teams, 'Grp_CoE_DevSecOps_Users'))
    needs: validation
    with:
      registry_name_pull: ${{ vars.AZURE_CR_NAME_CRT }}
      registry_name_push: ${{ vars.AZURE_CR_NAME_PRD  }}
      azure_tenant_id: ${{ vars.AZURE_TENANT_ID  }}
      azure_subscription_id: ${{ vars.AZURE_PDIGITAL_SUBSCRIPTION_ID_PRD  }}
      resource_group: ${{ vars.AZURE_AKS_RG_NAME_PRD  }}
      cluster_name: ${{ vars.AZURE_AKS_NAME_MULTICANAL_PRD  }}
      cluster_namespace: ${{ vars.AZURE_AKS_NAMESPACE }}
      cluster_max_replica: "2"
      cluster_min_replica: "1"
    secrets:
      GH_PACKAGES_USER: ${{ secrets.GH_PACKAGES_USER }}
      GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
      AZURE_CLIENT_ID_PULL: ${{ secrets.AZURE_CLIENT_ID_SP_CRT }}
      AZURE_CLIENT_SECRET_PULL: ${{ secrets.AZURE_CLIENT_SECRET_SP_CRT }}
      AZURE_CLIENT_ID_PUSH: ${{ secrets.AZURE_CLIENT_ID_SP_PRD }}
      AZURE_CLIENT_SECRET_PUSH: ${{ secrets.AZURE_CLIENT_SECRET_SP_PRD }}
